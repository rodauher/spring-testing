plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.adarshr.test-logger' version '3.2.0'
	id 'jacoco'
	id 'pmd'
	id 'info.solidsoft.pitest' version '1.7.4'
	id("maven-publish")
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java

			versionMapping {
				usage('java-api') {
					fromResolutionOf('runtimeClasspath')
				}
				usage('java-runtime') {
					fromResolutionResult()
				}
			}
		}
		}
	}
	repositories {
		maven {
			name = "spring-testing"
			url = uri("https://maven.pkg.github.com/rodauher/spring-testing")
			credentials {
				username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
				password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
			}
		}
	}
	publications {
		gpr(MavenPublication) {
			from(components.java)
		}
	}
}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
	}
}
pmd {
	consoleOutput = true
	ignoreFailures = true
	toolVersion = "6.21.0"
	rulesMinimumPriority = 5
	ruleSets = ["category/java/errorprone.xml", "category/java/bestpractices.xml"]
}
pitest {
	junit5PluginVersion = '0.15'
	targetClasses = ['com.example.springtesting.*']
	pitestVersion = '1.7.4'
	threads = 4
	outputFormats = ['XML', 'HTML']
	timestampedReports = false

}